package com.gerken.sofa.logic;

	// Begin imports 

import com.gerken.sofa.bean.*;
import com.gerken.sofa.spout.IUserIdReaderSpout;
import com.gerken.sofa.util.StackoverflowAnalyticsLogger;
import com.gerken.sofa.util.IStackoverflowAnalyticsLogger;

import backtype.storm.task.TopologyContext;

import java.io.Serializable;
import java.util.Map;

	// End imports 

public class UserIdReaderSpoutLogic implements Serializable {

		// Begin declarations
		 
	private static final long serialVersionUID = 1L;

    private static final IStackoverflowAnalyticsLogger log = StackoverflowAnalyticsLogger.getInstance();
    private boolean written = false;

		// End declarations 

    public void nextTuple(final IUserIdReaderSpout spout) {

			// Begin nextTuple() logic 
			
        try {

        	if (written) { return; }
        	
    		String id = "1442874";
    		
    		UserSpec userSpec = new UserSpec(id);
    		
    		spout.emitToUsers(userSpec);
    		
        	written = true;
        	
       		Thread.sleep(100);

    	} catch (InterruptedException e) {
    		log.finest("UserIdReaderSpoutLogic","nextTuple", e.toString());
        } catch (Exception e) {
       		log.severe("UserIdReaderSpoutLogic","nextTuple", e.toString());
        }

			// End nextTuple() logic 

    }

    public void open(Map map, TopologyContext topologyContext, IUserIdReaderSpout spout) {

			// Begin open() logic 
 
 
			// End open() logic 

    }

    public void close(IUserIdReaderSpout spout) {

			// Begin close() logic 


			// End close() logic 

    }

    public void activate(IUserIdReaderSpout spout) {

			// Begin activate() logic 


			// End activate() logic 

    }

    public void deactivate(IUserIdReaderSpout spout) {

			// Begin deactivate() logic 


			// End deactivate() logic 

    }

    public void ack(Object o, IUserIdReaderSpout spout) {

			// Begin ack() logic 


			// End ack() logic 

    }

    public void fail(Object o, IUserIdReaderSpout spout) {

			// Begin fail() logic 


			// End fail() logic 

    }

// Begin custom methods 


// End custom methods 

}
